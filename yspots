#!/usr/bin/env bash

# need both yad and jq for this command to run
#
if [ ! $(which yad) ]; then
  echo "you need yad: do sudo apt install yad"
  exit 1
fi

if [ ! $(which jq) ]; then
  echo "you need jq: do sudo apt install jq"
  exit 1
fi

# -b band, -f full screen, -m mode
vtype=right
band=
mode=
clip=0
while getopts ':b:m:fch' OPTION; do
  case "$OPTION" in
    f)
      vtype=full 
      ;;
    b)
      band=$(echo "$OPTARG" | sed 's/m//g' | sed 's/c//g')
      ;;
    m)
      mode=$(echo "$OPTARG" | tr 'a-z' 'A-Z')
      ;;
    c)
      clip=1
      if [ ! $(which xclip) ]; then
        echo "you need xclip with -c: do sudo apt install xclip"
        exit 1
      fi
      ;;
    h|?)
      echo "Usage: $(basename $0) [-f] [-b band] [-m mode] [-h|-?]"
      exit 1
      ;;
  esac
done

shift "$(($OPTIND -1))"

function rowdo {
  argument=${4}
  if [ ${5} == "SSB" ]; then
    setfreq $argument
    if [ ${clip} == "1" ]; then
      echo -n "${3}" | xclip -selection clipboard
    fi
  fi
}

function do_select {
  echo in do_select: arguments are: ${@}
  line=${@}
  echo "$1ine" | sed 's/FALSE//g2' | grep -q -i "false"
  err=$?

  if [ $err -ne 0 ]; then
    echo "$line" | sed 's/^TRUE //' >> $HOME/potaspot.selections
  fi
}

export -f do_select
export -f rowdo

function b2fr {
  f="$1"

  case $1 in
  160) range1=1800; range2=2000 ;;
  80)  range1=3525; range2=4000 ;;
  40)  range1=7000; range2=7300 ;;
  30)  range1=10100; range2=10150 ;;
  20)  range1=14000; range2=14350 ;;
  17)  range1=18068; range2=18168 ;;
  15)  range1=21000; range2=21450 ;;
  12)  range1=24890; range2=24990 ;; 
  10)  range1=28000; range2=29700 ;;
  6)   range1=50000; range2=54000 ;;
  2)   range1=144000; range2=148000 ;;
  440) range1=420000; range2=450000 ;;
  *) range1=0; range2=0 ;;
  esac
}

url='https://api.pota.app/spot/activator'

curl -s $url > temp.json 

jq 'sort_by([(.mode), (.frequency|tonumber)])' temp.json > temp1.json

if [ ! -z $mode ]; then
  jq "map(select(.mode == \"$mode\"))" temp1.json > temp.json
else
  mv temp1.json temp.json
fi

if [ ! -z $band ]; then
  b2fr $band
  jq "map(select((.frequency >= \"$range1\") and (.frequency <= \"$range2\")))" temp.json > spots.json
else
  mv temp.json spots.json
fi

n=$(cat spots.json | jq '. [] | {reference: .reference, activatoper: .activator, freq: .frequency}' | jq '. .reference' | wc -l)
let n=$(($n - 1))

rm -f temp.json temp.out.txt

for s in $(seq 0 $n); do
  ref=$(cat spots.json | jq ". [$s] | .reference")
  activator=$(cat spots.json | jq ". [$s] | .activator")
  freq=$(cat spots.json | jq ". [${s}] | .frequency")
  loc=$(cat spots.json | jq ". [${s}] | .locationDesc")
  grid=$(cat spots.json | jq ". [${s}] | .grid6")
  mode=$(cat spots.json | jq ". [${s}] | .mode")

  if [ "${mode}" = '""' ]; then
    mode='n/a'
  fi
  
  # echo "strlen ${freq} ==> ${#freq}"

  if [ ${#freq} = 6 ]; then        # even though I see 4 chars, #freq reports 6
    freq="0${freq}"
  fi

  sel='FALSE'
  if [ -f "$HOME/potaspot.selections" ]; then
    v1=$(echo ${ref} | tr -d '"')
    v2=$(echo ${activator} | tr -d '"')
    if grep -q -i "${v1}.*${v2}" $HOME/potaspot.selections; then
      sel='TRUE'
    fi
  fi

  printf "%-s %-10s %-12s %-12s %-8s %-8s %s 16\n" ${sel} ${ref} ${activator} ${freq} ${mode} ${loc:0:10} ${grid} | tr -d '"' >> temp.out.txt
done

gw=$(xdpyinfo | grep dimensions | awk '{print $2}' | tr 'x' ' ' | awk '{print $1}')
gh=$(xdpyinfo | grep dimensions | awk '{print $2}' | tr 'x' ' ' | awk '{print $2}')
let h=$(($gh - 100))
let w=$(($gw - 100))

echo "in rowdo yspots"

txt=( `cat temp.out.txt` )

#--select-action='bash -c "do_select %s"' 

if [ $vtype = "full" ]; then
  clip=$clip yad --title "POTA Spots" --list --checklist --dclick-action='bash -c "rowdo %s"' --select-action='bash -c "do_select %s"' --width ${w} --height ${h} --posx -1 --posy +0 --fixed --button="Clear saved Pota Spots":"rm -f $HOME/potaspot.selections" --button="Ok" --buttons-layout=center --escape-ok  --column Done --column Park --column Activator --column Frequency --column Mode --column Location --column Grid --column @font@ ${txt[@]} > /dev/null 2>&1
else
  clip=$clip yad --title "POTA Spots" --list --checklist --dclick-action='bash -c "rowdo %s"' --select-action='bash -c "do_select %s"' --width 800 --height 1000 --posx -1 --posy +0 --fixed --button="Clear saved Pota Spots":"rm -f $HOME/potaspot.selections" --button="Ok" --buttons-layout=center --escape-ok --column Done --column Park --column Activator --column Frequency --column Mode --column Location --column Grid --column @font@ ${txt[@]} > /dev/null 2>&1
fi

[ -f "$HOME/potaspot.selections" ] && (echo -e "you chose ( in ~/potaspot.selections ):\n"; cat $HOME/potaspot.selections)

rm -f temp.out.txt
rm -f spots.json
unset -f do_select
unset -f rowdo
